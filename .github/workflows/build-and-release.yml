name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: macos-13
            platform: darwin
            arch: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm make
        env:
          NODE_ENV: production

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCP-Router-Windows-x64
          path: apps/electron/out/make/squirrel.windows/x64/*.exe
          retention-days: 5

      - name: Upload artifacts (macOS ARM64)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MCP-Router-macOS-ARM64
          path: apps/electron/out/make/zip/darwin/arm64/*.zip
          retention-days: 5

      - name: Upload artifacts (macOS x64)
        if: matrix.os == 'macos-13'
        uses: actions/upload-artifact@v4
        with:
          name: MCP-Router-macOS-x64
          path: apps/electron/out/make/zip/darwin/x64/*.zip
          retention-days: 5

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: true
          files: |
            artifacts/**/*.exe
            artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
